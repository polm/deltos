// Generated by LiveScript 1.4.0
(function(){
  var loadEntriesThen, makeHitDiv, makeEmbed, search, searchHits, input;
  loadEntriesThen = function(callback){
    var req;
    req = new XMLHttpRequest();
    req.onload = callback;
    req.open('GET', '/deltos.json', true);
    return req.send();
  };
  loadEntriesThen(function(it){
    var entries, input;
    entries = it.target.response.split("\n").filter(function(it){
      return it.length > 0;
    }).map(function(it){
      return JSON.parse(it);
    });
    window.entries = entries;
    input = document.querySelector('.deltos-search');
    return input.oninput = search;
  });
  makeHitDiv = function(entry){
    var div;
    div = document.createElement('div');
    div.innerHTML = makeEmbed(entry);
    return div;
  };
  makeEmbed = function(entry){
    var out;
    out = "<a class=\"result\" href=\"/by-id/" + entry.id + ".html\">";
    out += '<div class="summary-small">';
    out += '<div class="imgwrapper" ';
    if (entry.image) {
      out += "style=\"background-image: url(" + entry.image + ")\"";
    }
    out += "></div>";
    out += "<h2>" + entry.title + "</h2>";
    out += "<p>" + entry.description + "</p>";
    return out += "</div></a>";
  };
  search = function(){
    var rd, input, query, i$, ref$, len$, entry;
    rd = document.querySelector('.deltos-results');
    input = document.querySelector('.deltos-search');
    rd.innerHTML = '';
    query = input.value.toLowerCase();
    for (i$ = 0, len$ = (ref$ = entries).length; i$ < len$; ++i$) {
      entry = ref$[i$];
      if (searchHits(entry, query)) {
        rd.appendChild(makeHitDiv(entry));
      }
      if (rd.length > 50) {
        return;
      }
    }
  };
  searchHits = function(entry, query){
    if (!query || query.length === 0) {
      return true;
    }
    return new RegExp(query, 'i').test(entry.searchableText);
  };
  input = document.querySelector('.deltos-search');
}).call(this);
